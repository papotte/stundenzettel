name: Deploy to Firebase

on:
  release:
    types: [published]
  push:
    branches:
      # We want to allow any branches that have `deploy` in the name to test this workflow
      - deploy/*
      - '*/*deploy*'
  workflow_dispatch:

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build the application
        run: npm run build
        env:
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}

      - name: Build the functions
        run: npm run functions:build
        env:
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Prepare Google Application Credentials
        shell: bash
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > "google-application-credentials.json"

      - name: Deploy Firebase functions
        shell: bash
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/google-application-credentials.json
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --non-interactive --force -m "Deploying from Github Actions ${{ github.event.release.tag_name }}"

      - name: Remove credentials file
        if: success() || failure()
        run: |
          rm google-application-credentials.json
